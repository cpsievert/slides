library(XML)
library(rvest)
library(knitr)
html("http://en.wikipedia.org/wiki/Table_%28information%29") %>%
html_table()
html("http://en.wikipedia.org/wiki/Table_%28information%29") %>%
html_node() %>% html_table()
servr::httd("/Users/cpsievert/Desktop/github/local/cpsievert.github.com/slides/web-scraping/")
html("http://en.wikipedia.org/wiki/Table_%28information%29") %>%
html_node("wikitable") %>% html_table()
html("http://en.wikipedia.org/wiki/Table_%28information%29") %>%
html_node("table") %>% html_table()
html("http://en.wikipedia.org/wiki/Table_%28information%29") %>%
html_node("table[class='wikitable']") %>% html_table()
html("http://en.wikipedia.org/wiki/Table_(information)") %>%
html_node("table[class='wikitable']") %>% html_table()
library(XML)
doc <- htmlParse("http://en.wikipedia.org/wiki/Table_(information)")
node <- getNodeSet(doc, "table[class='wikitable']")
readHTMLTable(node)
node
node <- getNodeSet(doc, "//table[class='wikitable']")
readHTMLTable(node)
node <- getNodeSet(doc, "//table[@class='wikitable']")
readHTMLTable(node)
node
readHTMLTable(node[[1]])
html("http://en.wikipedia.org/wiki/Table_(information)") %>%
html_node("table[class='wikitable']")
install_github("rstudio/rmarkdown")
render("index.Rmd")
library(rmarkdown)
render("index.Rmd")
install.packages("rmarkdown")
ioslides_presentation
library(rmarkdown)
ioslides_presentation
render("index.Rmd")
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a")
library(rvest)
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a")
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>% head
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>% html_attr(name="href") %>% head
html("http://en.wikipedia.org/wiki/Table_(information)") %>%
# then extract just the HTML for the table
html_node("#wikitable") %>%
# convert the HTML table into a data frame
html_table()
html("http://en.wikipedia.org/wiki/Table_(information)") %>%
# then extract just the HTML for the table
html_node(".wikitable") %>%
# convert the HTML table into a data frame
html_table()
html("http://en.wikipedia.org/wiki/Table_(information)") %>%
# then extract the first node with class of wikitable
html_node(".wikitable")
html("http://www.stat.iastate.edu/people/faculty/") %>%
html_nodes("#content a")
html("http://www.stat.iastate.edu/people/faculty/") %>%
html_nodes("#content a") %>% html_attr(name="href")
html("http://www.stat.iastate.edu/people/faculty/") %>%
html_nodes("#content a") %>% html_attr(name="href") -> hrefs
head(hrefs)
library(RSelenium)
startServer()
Sys.sleep(5)
remDr <<- remoteDriver(browserName="firefox")
remDr$open()
for (i in hrefs) {
Sys.sleep(2)
remDr$navigate(i)
}
checkForServer()
library(RSelenium)
startServer()
Sys.sleep(5)
remDr <<- remoteDriver(browserName="firefox")
remDr$open()
for (i in hrefs) {
Sys.sleep(2)
remDr$navigate(i)
}
remDr
remDr$open()
startServer()
remDr$open()
remDr <- remoteDriver(browserName="firefox")
remDr$open()
library(RSelenium)
checkForServer()
startServer()
library(RSelenium)
startServer()
Sys.sleep(5)
remDr <- remoteDriver(browserName="firefox")
remDr$open()
html("http://www.stat.iastate.edu/people/faculty/") %>%
html_nodes("#content a") %>% html_attr(name="href") -> hrefs
library(rvest)
html("http://www.stat.iastate.edu/people/faculty/") %>%
html_nodes("#content a") %>% html_attr(name="href") -> hrefs
head(hrefs)
for (i in hrefs) {
Sys.sleep(2)
remDr$navigate(i)
}
obs <- XML2Obs("mariokart.xml", local = TRUE)
library(XML2R)
obs <- XML2Obs("mariokart.xml", local = TRUE)
xmlParse("mariokar.xml")
xmlParse("mariokart.xml")
xmlParse
sessionInfo()
players <- system.file("extdata", "players.xml", package = "XML2R")
obs2 <- XML2Obs(players, local = TRUE)
traceback()
install_github("cpsievert/XML2R")
obs2 <- XML2Obs(players, local = TRUE)
obs <- XML2Obs("mariokart.xml", local = TRUE)
obs
obs <- XML2Obs("mariokart.xml", local = TRUE, url.map = FALSE)
obs
unique(names(obs))
browseVignettes("rvest")
collapse_obs(obs)
add_key(obs)
add_key(obs, parent = "mariokart//driver", recycle = "name")
install_github("cpsievert/LDAvis")
library(XML2R)
obs <- XML2Obs("mariokart.xml", local = TRUE)
table(names(obs))
obs
sessionInfo
sessionInfo()
install_github("cpsievert/LDAvis")
install_github("cpsievert/XML2R")
library(XML2R)
obs <- XML2Obs("mariokart.xml", local = TRUE)
table(names(obs))
obs
load_all("~/Desktop/github/local/XML2R/")
library(XML2R)
obs <- XML2Obs("mariokart.xml", local = TRUE)
table(names(obs))
obs
install_github("cpsievert/XML2R")
library(XML2R)
obs <- XML2Obs("mariokart.xml", local = TRUE, quiet = TRUE)
table(names(obs))
obs
obs <- add_key(obs, parent = "mariokart//driver", recycle = "name")
traceback()
load_all("~/Desktop/github/local/XML2R/")
obs <- add_key(obs, parent = "mariokart//driver", recycle = "name")
elders
recycle
obs[elders]
lapply(obs[elders], function(x) x[,recycle])
obs[elders]
obs[elders][[1]]
obs[elders][[1]][,"name"]
str(obs[elders][[1]])
str(obs)
load_all("~/Desktop/github/local/XML2R/")
library(XML2R)
obs <- XML2Obs("mariokart.xml", local = TRUE)
table(names(obs))
obs
str(obs)
obs <- lapply(obs, function(x) x[,!grepl("^url$", colnames(x))])
str(obs)
obs <- listsToObs(l, urls = valid.urls, append.value = append.value,
as.equiv = as.equiv, url.map = url.map)
str(obs)
obs <- lapply(obs, function(x) x[,!grepl("^url$", colnames(x)), drop = FALSE])
str(obs)
install_github("cpsievert/LDAvis")
install_github("cpsievert/XML2R")
library(XML2R)
obs <- XML2Obs("mariokart.xml", local = TRUE)
table(names(obs))
obs <- add_key(obs, parent = "mariokart//driver", recycle = "name")
collapse_obs(obs)
library(XML2R)
obs <- XML2Obs("mariokart.xml", local = TRUE, quiet = TRUE)
table(names(obs))
obs <- add_key(obs, parent = "mariokart//driver", recycle = "name")
tabs <- collapse_obs(obs)
merge(tabs[[1]], tabs[[2]])
XML2Obs("http://gd2.mlb.com/components/game/mlb/year_2011/month_04/day_04/gid_2011_04_04_minmlb_nyamlb_1/players.xml") %>% head
library(magrittr)
XML2Obs("http://gd2.mlb.com/components/game/mlb/year_2011/month_04/day_04/gid_2011_04_04_minmlb_nyamlb_1/players.xml") %>% head
XML2Obs("http://gd2.mlb.com/components/game/mlb/year_2011/month_04/day_04/gid_2011_04_04_minmlb_nyamlb_1/players.xml") %>% add_key(parent = "game", recycle = "venue") %>% add_key(parent = "game", recycle = "date")
XML2Obs("http://gd2.mlb.com/components/game/mlb/year_2011/month_04/day_04/gid_2011_04_04_minmlb_nyamlb_1/players.xml") %>%
add_key(parent = "game", recycle = "venue") %>%
add_key(parent = "game", recycle = "date") %>%
XML2Obs("http://gd2.mlb.com/components/game/mlb/year_2011/month_04/day_04/gid_2011_04_04_minmlb_nyamlb_1/players.xml") %>%
add_key(parent = "game", recycle = "venue") %>%
add_key(parent = "game", recycle = "date") %>%
collapse_obs -> tabs
traceback()
XML2Obs("http://gd2.mlb.com/components/game/mlb/year_2011/month_04/day_04/gid_2011_04_04_minmlb_nyamlb_1/players.xml") %>%
add_key(parent = "game", recycle = "venue") %>%
add_key(parent = "game", recycle = "date")
XML2Obs("http://gd2.mlb.com/components/game/mlb/year_2011/month_04/day_04/gid_2011_04_04_minmlb_nyamlb_1/players.xml") %>%
add_key(parent = "game", recycle = "venue") %>%
add_key(parent = "game", recycle = "date") %>%
head
XML2Obs("http://gd2.mlb.com/components/game/mlb/year_2011/month_04/day_04/gid_2011_04_04_minmlb_nyamlb_1/players.xml") %>%
add_key(parent = "game", recycle = "venue") %>%
add_key(parent = "game", recycle = "date") %>%
collapse_obs -> tabz
library(magrittr)
XML2Obs("http://gd2.mlb.com/components/game/mlb/year_2011/month_04/day_04/gid_2011_04_04_minmlb_nyamlb_1/players.xml") %>%
add_key(parent = "game", recycle = "venue") %>%
add_key(parent = "game", recycle = "date") %>%
collapse_obs -> tabs
tabs[["game//team//player"]][1:5, 1:5]
tabs[["game//team//player"]][1:5, c("first", "last", "venue", "date")]
cat("mariokart.xml")
cat(file =  "mariokart.xml")
cat(file = "mariokart.json")
readLines("mariokart.json")
readLines(con = "mariokart.json")
f <- file.path(getwd(), "mariokart.json")
readLines(f)
toJSON(f)
library(jsonlite)
toJSON(f)
json <- readLines("mariokart.json")
json
toJSON
prettify
prettify(json)
json <- readLines("mariokart.json")
prettify(json)
json <- readLines("mariokart.json")
prettify(json)
json <- readLines("mariokart.json")
prettify(json)
json <- readLines("mariokart.json")
prettify(json)
json <- readLines("mariokart.json")
prettify(json)
json <- readLines("mariokart.json")
prettify(json)
json <- readLines("mariokart.json")
prettify(json)
json <- readLines("mariokart.json")
prettify(json)
fromJSON(json)
json <- readLines("mariokart.json")
prettify(json)
json <- readLines("mariokart.json")
prettify(json)
fromJSON(json)
json <- readLines("mariokart.json")
prettify(json)
json <- readLines("mariokart2.json")
prettify(json)
fromJSON(json)
json <- readLines("mariokart.json")
prettify(json)
json <- readLines("mariokart.json")
prettify(json)
fromJSON(json)
json <- readLines("mariokart2.json")
prettify(json)
fromJSON(json)
RJSONIO::fromJSON(json)
RJSONIO::fromJSON(json, asText = TRUE)
prettify
blah <- paste(as.character(json), collapse = "\n")
RJSONIO::fromJSON(json, asText = TRUE)
jsonlite::reformat
jsonlite:::reformat
blah <- jsonlite:::reformat(paste(as.character(json), collapse = "\n"))
blah <- jsonlite:::reformat(paste(as.character(json), collapse = "\n"), pretty =FALSE)
RJSONIO::fromJSON(blah, asText = TRUE)
blah <- paste(as.character(json), collapse = "\n")
RJSONIO::fromJSON(blah, asText = TRUE)
RJSONIO::fromJSON(blah, asText = TRUE, simplifyDataFrame = TRUE)
json <- readLines("mariokart2.json")
prettify(json)
fromJSON(json)
?fromJSON
fromJSON(json, simplifyVector = FALSE)
unlist(fromJSON(json, simplifyVector = FALSE))
l <- fromJSON(json, simplifyVector = FALSE)
l[[1]]
l[[1]][[1]]
lapply(l[[1]], c)
lapply(l[[1]], length)
ldply(l[[1]])
plyr::ldply(l[[1]])
str(l)
lapply(l, length)
rapply(l, length)
data1 <- fromJSON("https://api.github.com/users/hadley/repos")
colnames(data1)
colnames(data1$owner)
str(data1)
colnames(flatten(data1))
str(flatten(data1))
x <- data.frame(driver = c("Bowser", "Peach"), occupation = c("Koopa", "Princess"))
x$vehicle <- data.frame(model = c("Piranha Prowler", "Royal Racer"))
x$vehicle$stats <- data.frame(speed = c(55, 34), weight = c(67, 24), drift = c(35, 32))
str(x)
flatten(l)
flatten(x)
str(flatten(x))
XML2Obs
listsToObs(x, urls = "mariokart")
traceback()
x
json <- readLines("mariokart2.json")
prettify(json)
jsonlite::fromJSON("https://gist.githubusercontent.com/cpsievert/b55ac4a210842da78ed9/raw/f744d44e834e54295977accf9bf828710d2f892a/mariokart.json")
mario <- jsonlite::fromJSON("https://gist.githubusercontent.com/cpsievert/b55ac4a210842da78ed9/raw/f744d44e834e54295977accf9bf828710d2f892a/mariokart.json")
str(mario)
#drivers
mario$driver
# list of data frames
mario$vehicles
# make a single data frame
rbind.pages(mario$vehicles)
?rbind.page
?rbind.pages
mapply(cbind, mario$driver, mario$vehicles)
mapply(cbind, as.list(mario$driver), mario$vehicles)
as.list(mario$driver)
mario$vehicles
mapply(cbind, as.list(driver = mario$driver), mario$vehicles)
as.list(driver = mario$driver)
mapply(function(x, y) cbind(driver = x, y), as.list(mario$driver), mario$vehicles)
str(mario$vehicles)
mario$vehicles[[1]]
cbind(mario$vehicles[[1]], "test")
as.list(mario$driver)
str(as.list(mario$driver))
str(as.list(mario$driver)[[1]])
mapply(cbind, mario$vehicles, mario$driver)
mapply(cbind, mario$vehicles, as.list(mario$driver))
mapply(cbind, mario$vehicles, as.list(mario$driver), SIMPLIFY = FALSE)
mapply(cbind, mario$vehicles, mario$driver, SIMPLIFY = FALSE)
mapply(function(x, y) cbind(x, driver = y), mario$vehicles, mario$driver, SIMPLIFY = FALSE)
vehicles <- mapply(function(x, y) cbind(x, driver = y), mario$vehicles, mario$driver, SIMPLIFY = FALSE)
vehicles
rbind.pages(vehicles)
rbind.pages(mario$vehicles)
mario <- jsonlite::fromJSON("https://gist.githubusercontent.com/cpsievert/b55ac4a210842da78ed9/raw/f744d44e834e54295977accf9bf828710d2f892a/mariokart.json")
vehicles <- mapply(function(x, y) cbind(x, driver = y), mario$vehicles, mario$driver, SIMPLIFY = FALSE)
rbind.pages(vehicles)
rbind.pages
loadpkg
jsonlite:::loadpkg
requireNamespace
XML2Obs("http://bit.ly/mario-xml")
toJSON(fromJSON("http://bit.ly/mario-json"), pretty = TRUE)
mario <- fromJSON("http://bit.ly/mario-json")
str(mario)
mario$vehicles
mario$driver
toJSON(fromJSON("http://bit.ly/mario-json"), pretty = TRUE)
mario[!grepl("vehicle", names(mario))]
vehicles <- mapply(function(x, y) cbind(x, driver = y),
mario$vehicles, mario$driver, SIMPLIFY = FALSE)
rbind.pages(vehicles)
knit_theme
library(knitr)
knit_theme
knit_theme$get()
?with_lib
getwd()
in_dir(tempdir(), getwd())
getwd()
in_dri
in_dir
?library
?install
x2 <- 1
rm(x1)
rm(x2)
library("rvest")
html("http://www.stat.iastate.edu/people/faculty/") %>%
html_nodes("#content a") %>% html_attr(name="href") -> hrefs
head(hrefs)
library(RSelenium)
startServer()
remDr <- remoteDriver(browserName="firefox")
remDr$open()
remDr$navigate(hrefs[1])
remDr$getPageSource()
library(rvest)
# First, grab the page source
html("http://en.wikipedia.org/wiki/Table_(information)") %>%
# then extract the first node with class of wikitable
html_node(".wikitable") %>%
# then convert the HTML table into a data frame
html_table()
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>%
head
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>% html_atrr()
library("rvest")
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>% html_attr()
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>% html_attr
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>% html_attr("href")
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>% head
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>% html_attrs("href") %>% head
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>% html_attrs("hrefs") %>% head
html("http://www.sec.gov/litigation/suspensions.shtml") %>%
html_nodes("p+ table a") %>% html_attr("href") %>% head
html("http://www.stat.iastate.edu/people/faculty/") %>%
html_nodes("#content a") %>% html_attr(name="href") -> hrefs
head(hrefs)
library(RSelenium)
startServer()
remDr <- remoteDriver(browserName="firefox")
remDr$open()
for (i in hrefs) {
Sys.sleep(2)
remDr$navigate(i) # at this point, you could remDr$getPageSource()
}
library(jsonlite)
mario <- fromJSON("http://bit.ly/mario-json")
str(mario)
vehicles <- mapply(function(x, y) cbind(x, driver = y),
mario$vehicles, mario$driver, SIMPLIFY = FALSE)
vehicles
library(jsonlite)
mario <- fromJSON("http://bit.ly/mario-json")
str(mario) # nested data.frames?!?
library("tidyr")
?unnest
unnest(mario)
unnest(mario$vehicles)
unnest_(mario$vehicles)
unnest_(mario, vehicles)
df <- data.frame(
x = 1:3,
y = c("a", "d,e,f", "g,h"),
stringsAsFactors = FALSE
)
df %>%
transform(y = strsplit(y, ","))
df %>%
transform(y = strsplit(y, ",")) %>% str
df %>%
transform(y = strsplit(y, ",")) %>%
unnest(y)
mario
mario %>% transform(y = strsplit(y, ",")) %>%
unnest(y)
mario %>% transform(y = strsplit(vehicles, ",")) %>%
unnest(y)
mario
unnest
unnest_
methods("unnest_")
getS3method("unnest_", class = "data.frame")
getS3method("unnest_", class = "tbl_df")
df %>% tbl_df %>%
transform(y = strsplit(y, ",")) %>%
unnest(y)
library("dplyr")
df %>% tbl_df %>%
transform(y = strsplit(y, ",")) %>%
unnest(y)
df %>%
transform(y = strsplit(y, ","))
str(df)
df %>%
transform(y = strsplit(y, ",")) %>% str
getS3method("unnest_", class = "data.frame")
